<launch>

	<arg name="map" default="plan_tut" />

	<arg name="recoveries" default="false" />

	<arg name="mon_nav_config_file" if="$(arg recoveries)" default="$(find planning_tutorial)/config/monitored_nav_config.yaml" />
	<arg name="mon_nav_config_file" unless="$(arg recoveries)" default="" />	

	<arg name="max_bumper_recoveries" default=".inf"/>
	<arg name="wait_reset_bumper_duration" default="0.0"/>
	<arg name="topological_navigation_retries" default="3"/>
	<arg name="execute_policy_retries" default="3"/>

	<!-- requirements for recovery actions -->
	<group if="$(arg recoveries)">
		<include file="$(find backtrack_behaviour)/launch/backtrack.launch"/> 
		<include file="$(find mary_tts)/launch/ros_mary.launch"/> 
		<include file="$(find strands_webserver)/launch/webserver_dependencies.launch"/> 
		<node pkg="strands_webserver" type="strands_webserver" name="strands_webserver"/>
	</group>

 	<node pkg="monitored_navigation" type="monitored_nav.py" name="monitored_nav" output="screen" args="$(arg mon_nav_config_file)">
		<param name="wait_reset_bumper_duration" value="$(arg wait_reset_bumper_duration)"/>
		<rosparam param="/monitored_navigation/recover_states/recover_bumper" subst_value="True">[True, $(arg max_bumper_recoveries)]</rosparam>
	</node>

	<node pkg="topological_navigation" type="map_manager.py" name="topological_map_manager" args="$(arg map)" respawn="true"/>

	<node pkg="topological_navigation" name="topological_localisation" type="localisation.py" output="screen" respawn="true"/>
        
    <node pkg="topological_navigation" name="speed_based_prediction" type="speed_based_prediction.py" output="screen" respawn="true"/>

	<node pkg="topological_navigation" name="topological_navigation" type="navigation.py" output="screen" respawn="true">
		<param name="retries" type="int" value="$(arg topological_navigation_retries)"/>
	</node>

	<node pkg="topological_navigation" name="execute_policy_server" type="execute_policy_server.py" output="screen" respawn="true">
		<param name="retries" type="int" value="$(arg execute_policy_retries)"/>
	</node>

	<node pkg="topological_navigation" type="visualise_map.py" name="visualise_map" args="$(arg map)" respawn="true"/>

	<node pkg="topological_rviz_tools" name="topmap_interface" type="python_topmap_interface.py" output="screen">
		<param name="map_name" value="$(arg map)"/>
	</node>

	<node pkg="door_pass" type="door_passing.py" name="door_passing" respawn="true"/>

</launch>
